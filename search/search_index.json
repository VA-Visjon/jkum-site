{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"getting-started/","title":"Getting started","text":"<p>JKUM consist of a set of specifications for managing and transporting  information that can be found when inspecting manholes. Since not all data is accessible at the time after pipes has been laid, the information in general file formats does not take into consideration that only one end of the intersecting pipes can be seen. Thus: the need for detailed specification of what can be seen inside a manhole when opening it.</p> <p>for MkDocs is a powerful documentation framework on top of MkDocs, a static site generator for project documentation.<sup>1</sup> If you're familiar with Python, you can install Material for MkDocs with <code>pip</code>, the Python package manager. If not, we recommend using <code>docker</code>.</p>"},{"location":"getting-started/#installation","title":"Installation","text":""},{"location":"getting-started/#with-pip","title":"with pip recommended","text":"<p>Material for MkDocs is published as a Python package and can be installed with <code>pip</code>, ideally by using a virtual environment. Open up a terminal and install Material for MkDocs with:</p> Latest9.x <pre><code>pip install mkdocs-material\n</code></pre> <pre><code>pip install mkdocs-material==\"9.*\" # (1)!\n</code></pre> <ol> <li> <p>Material for MkDocs uses semantic versioning<sup>2</sup>, which is why it's a     good idea to limit upgrades to the current major version.</p> <p>This will make sure that you don't accidentally upgrade to the next major version, which may include breaking changes that silently corrupt your site. Additionally, you can use <code>pip freeze</code> to create a lockfile, so builds are reproducible at all times:</p> <pre><code>pip freeze &gt; requirements.txt\n</code></pre> <p>Now, the lockfile can be used for installation:</p> <pre><code>pip install -r requirements.txt\n</code></pre> </li> </ol> <p>This will automatically install compatible versions of all dependencies: MkDocs, Markdown, Pygments and Python Markdown Extensions. Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately.</p> <p> How to set up Material for MkDocs by @james-willett \u2013  15m \u2013 Learn how to create and host a documentation site using Material for MkDocs on GitHub Pages in a step-by-step guide.</p> <p>Tip</p> <p>If you don't have prior experience with Python, we recommend reading Using Python's pip to Manage Your Projects' Dependencies, which is a really good introduction on the mechanics of Python package management and helps you troubleshoot if you run into errors.</p>"},{"location":"getting-started/#with-docker","title":"with docker","text":"<p>The official Docker image is a great way to get up and running in a few minutes, as it comes with all dependencies pre-installed. Open up a terminal and pull the image with:</p> Latest9.x <pre><code>docker pull squidfunk/mkdocs-material\n</code></pre> <pre><code>docker pull squidfunk/mkdocs-material:9\n</code></pre> <p>The <code>mkdocs</code> executable is provided as an entry point and <code>serve</code> is the default command. If you're not familiar with Docker don't worry, we have you covered in the following sections.</p> <p>The following plugins are bundled with the Docker image:</p> <ul> <li>mkdocs-minify-plugin</li> <li>mkdocs-redirects</li> </ul> How to add plugins to the Docker image? <p>Material for MkDocs only bundles selected plugins in order to keep the size of the official image small. If the plugin you want to use is not included, you can add them easily:</p> Material for MkDocsInsiders <p>Create a <code>Dockerfile</code> and extend the official image:</p> Dockerfile<pre><code>FROM squidfunk/mkdocs-material\nRUN pip install mkdocs-macros-plugin\nRUN pip install mkdocs-glightbox\n</code></pre> <p>Clone or fork the Insiders repository, and create a file called <code>user-requirements.txt</code> in the root of the repository. Then, add the plugins that should be installed to the file, e.g.:</p> user-requirements.txt<pre><code>mkdocs-macros-plugin\nmkdocs-glightbox\n</code></pre> <p>Next, build the image with the following command:</p> <pre><code>docker build -t squidfunk/mkdocs-material .\n</code></pre> <p>The new image will have additional packages installed and can be used exactly like the official image.</p>"},{"location":"getting-started/#with-git","title":"with git","text":"<p>Material for MkDocs can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version:</p> <pre><code>git clone https://github.com/squidfunk/mkdocs-material.git\n</code></pre> <p>Next, install the theme and its dependencies with:</p> <pre><code>pip install -e mkdocs-material\n</code></pre> <ol> <li> <p>In 2016, Material for MkDocs started out as a simple theme for MkDocs, but over the course of several years, it's now much more than that \u2013 with the many built-in plugins, settings, and countless customization abilities, Material for MkDocs is now one of the simplest and most powerful frameworks for creating documentation for your project.\u00a0\u21a9</p> </li> <li> <p>Note that improvements of existing features are sometimes released as patch releases, like for example improved rendering of content tabs, as they're not considered to be new features.\u00a0\u21a9</p> </li> </ol>"}]}